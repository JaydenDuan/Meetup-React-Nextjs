{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\NextJs-Projects\\\\06-onwards-to-a-bigger-project-starting-project\\\\pages\\\\[meetupId]\\\\index.js\";\nimport React, { Fragment } from \"react\";\nimport { MongoClient } from \"mongodb\";\nimport MeetupDetail from \"../../components/meetups/MeetupDetail\";\n\nconst MeetupDetails = props => {\n  return /*#__PURE__*/_jsxDEV(MeetupDetail, {\n    image: props.image,\n    title: props.title,\n    address: props.address,\n    description: props.description\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 5\n  }, this);\n};\n\nexport async function getStaticPaths() {\n  const client = await MongoClient.connect(\"mongodb+srv://jaydenduan888:Woshige+12A@cluster0.csksvfp.mongodb.net/meetups?retryWrites=true&w=majority\");\n  const db = client.db();\n  const meetupsCollection = db.collection(\"meetups\");\n  const meetups = await meetupsCollection.find({}, {\n    _id: 1\n  }).toArray();\n  client.close();\n  return {\n    fallback: false,\n    paths: meetups.map(meetup => ({\n      params: {\n        meetupId: meetup._id.toString()\n      }\n    }))\n  };\n}\nexport async function getStaticProps(context) {\n  const meetupId = context.params.meetupId;\n  const client = await MongoClient.connect(\"mongodb+srv://jaydenduan888:Woshige+12A@cluster0.csksvfp.mongodb.net/meetups?retryWrites=true&w=majority\");\n  const db = client.db();\n  const meetupsCollection = db.collection(\"meetups\");\n  const selectedMeetup = await meetupsCollection.findOne({\n    _id: meetupId\n  });\n  console.log(selectedMeetup);\n  return {\n    props: {\n      meetup: selectedMeetup\n    }\n  };\n}\nexport default MeetupDetails;","map":{"version":3,"sources":["D:/NextJs-Projects/06-onwards-to-a-bigger-project-starting-project/pages/[meetupId]/index.js"],"names":["React","Fragment","MongoClient","MeetupDetail","MeetupDetails","props","image","title","address","description","getStaticPaths","client","connect","db","meetupsCollection","collection","meetups","find","_id","toArray","close","fallback","paths","map","meetup","params","meetupId","toString","getStaticProps","context","selectedMeetup","findOne","console","log"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,WAAT,QAA4B,SAA5B;AACA,OAAOC,YAAP,MAAyB,uCAAzB;;AACA,MAAMC,aAAa,GAAIC,KAAD,IAAW;AAC/B,sBACE,QAAC,YAAD;AACE,IAAA,KAAK,EAAEA,KAAK,CAACC,KADf;AAEE,IAAA,KAAK,EAAED,KAAK,CAACE,KAFf;AAGE,IAAA,OAAO,EAAEF,KAAK,CAACG,OAHjB;AAIE,IAAA,WAAW,EAAEH,KAAK,CAACI;AAJrB;AAAA;AAAA;AAAA;AAAA,UADF;AAQD,CATD;;AAUA,OAAO,eAAeC,cAAf,GAAgC;AACnC,QAAMC,MAAM,GAAG,MAAMT,WAAW,CAACU,OAAZ,CACjB,0GADiB,CAArB;AAGE,QAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AAEA,QAAMC,iBAAiB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAA1B;AAEA,QAAMC,OAAO,GAAG,MAAMF,iBAAiB,CAACG,IAAlB,CAAuB,EAAvB,EAA2B;AAACC,IAAAA,GAAG,EAAE;AAAN,GAA3B,EAAqCC,OAArC,EAAtB;AACER,EAAAA,MAAM,CAACS,KAAP;AACJ,SAAO;AACHC,IAAAA,QAAQ,EAAE,KADP;AAEHC,IAAAA,KAAK,EAACN,OAAO,CAACO,GAAR,CAAYC,MAAM,KAAG;AAACC,MAAAA,MAAM,EAAC;AAACC,QAAAA,QAAQ,EAAEF,MAAM,CAACN,GAAP,CAAWS,QAAX;AAAX;AAAR,KAAH,CAAlB;AAFH,GAAP;AAKH;AACD,OAAO,eAAeC,cAAf,CAA8BC,OAA9B,EAAuC;AAC1C,QAAMH,QAAQ,GAAGG,OAAO,CAACJ,MAAR,CAAeC,QAAhC;AACA,QAAMf,MAAM,GAAG,MAAMT,WAAW,CAACU,OAAZ,CACjB,0GADiB,CAArB;AAGE,QAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AAEA,QAAMC,iBAAiB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAA1B;AACA,QAAMe,cAAc,GAAG,MAAMhB,iBAAiB,CAACiB,OAAlB,CAA0B;AAACb,IAAAA,GAAG,EAACQ;AAAL,GAA1B,CAA7B;AACAM,EAAAA,OAAO,CAACC,GAAR,CAAYH,cAAZ;AACJ,SAAO;AACLzB,IAAAA,KAAK,EAAE;AACNmB,MAAAA,MAAM,EAAEM;AADF;AADF,GAAP;AAKD;AAED,eAAe1B,aAAf","sourcesContent":["import React, { Fragment } from \"react\";\r\nimport { MongoClient } from \"mongodb\";\r\nimport MeetupDetail from \"../../components/meetups/MeetupDetail\";\r\nconst MeetupDetails = (props) => {\r\n  return (\r\n    <MeetupDetail\r\n      image={props.image}\r\n      title={props.title}\r\n      address={props.address}\r\n      description={props.description}\r\n    ></MeetupDetail>\r\n  );\r\n};\r\nexport async function getStaticPaths() {\r\n    const client = await MongoClient.connect(\r\n        \"mongodb+srv://jaydenduan888:Woshige+12A@cluster0.csksvfp.mongodb.net/meetups?retryWrites=true&w=majority\"\r\n      );\r\n      const db = client.db();\r\n    \r\n      const meetupsCollection = db.collection(\"meetups\");\r\n    \r\n      const meetups = await meetupsCollection.find({}, {_id: 1}).toArray()\r\n        client.close()\r\n    return {\r\n        fallback: false,\r\n        paths:meetups.map(meetup=>({params:{meetupId: meetup._id.toString()}}))\r\n       \r\n    }\r\n}\r\nexport async function getStaticProps(context) {\r\n    const meetupId = context.params.meetupId\r\n    const client = await MongoClient.connect(\r\n        \"mongodb+srv://jaydenduan888:Woshige+12A@cluster0.csksvfp.mongodb.net/meetups?retryWrites=true&w=majority\"\r\n      );\r\n      const db = client.db();\r\n    \r\n      const meetupsCollection = db.collection(\"meetups\");\r\n      const selectedMeetup = await meetupsCollection.findOne({_id:meetupId})\r\n      console.log(selectedMeetup)\r\n  return {\r\n    props: {\r\n     meetup: selectedMeetup\r\n    },\r\n  };\r\n}\r\n\r\nexport default MeetupDetails;\r\n"]},"metadata":{},"sourceType":"module"}