{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n// /api/new-meetup\nimport { MongoClient } from \"mongodb\";\n\nasync function handler(req, res) {\n  console.log(req.body, '123');\n\n  if (req.method === \"POST\") {\n    const data = req.body;\n\n    try {\n      const client = await MongoClient.connect(\"mongodb+srv://jaydenduan888:Woshige+12A@cluster0.csksvfp.mongodb.net/meetups?retryWrites=true&w=majority\");\n      const db = client.db();\n      const meetupsCollection = db.collection(\"meetups\");\n      const result = await meetupsCollection.insertOne(_objectSpread({\n        id: new Date()\n      }, data));\n    } catch (error) {\n      console.log(error);\n    }\n\n    client.close();\n    res.status(201).json({\n      message: \"Insert Success.\"\n    });\n  }\n}\n\nexport default handler;","map":{"version":3,"sources":["D:/NextJs-Projects/06-onwards-to-a-bigger-project-starting-project/pages/api/new-meetup.js"],"names":["MongoClient","handler","req","res","console","log","body","method","data","client","connect","db","meetupsCollection","collection","result","insertOne","id","Date","error","close","status","json","message"],"mappings":";;;;;;AAAA;AACA,SAASA,WAAT,QAA4B,SAA5B;;AACA,eAAeC,OAAf,CAAuBC,GAAvB,EAA4BC,GAA5B,EAAiC;AAC7BC,EAAAA,OAAO,CAACC,GAAR,CAAYH,GAAG,CAACI,IAAhB,EAAqB,KAArB;;AACF,MAAIJ,GAAG,CAACK,MAAJ,KAAe,MAAnB,EAA2B;AACzB,UAAMC,IAAI,GAAGN,GAAG,CAACI,IAAjB;;AAEA,QAAI;AACA,YAAMG,MAAM,GAAG,MAAMT,WAAW,CAACU,OAAZ,CACjB,0GADiB,CAArB;AAGE,YAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AAEA,YAAMC,iBAAiB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAA1B;AACA,YAAMC,MAAM,GAAG,MAAMF,iBAAiB,CAACG,SAAlB;AACnBC,QAAAA,EAAE,EAAC,IAAIC,IAAJ;AADgB,SAEhBT,IAFgB,EAArB;AAIL,KAXD,CAWE,OAAOU,KAAP,EAAc;AACZd,MAAAA,OAAO,CAACC,GAAR,CAAYa,KAAZ;AACH;;AACDT,IAAAA,MAAM,CAACU,KAAP;AAEAhB,IAAAA,GAAG,CAACiB,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAEC,MAAAA,OAAO,EAAE;AAAX,KAArB;AACD;AACF;;AAED,eAAerB,OAAf","sourcesContent":["// /api/new-meetup\r\nimport { MongoClient } from \"mongodb\";\r\nasync function handler(req, res) {\r\n    console.log(req.body,'123');\r\n  if (req.method === \"POST\") {\r\n    const data = req.body;\r\n\r\n    try {\r\n        const client = await MongoClient.connect(\r\n            \"mongodb+srv://jaydenduan888:Woshige+12A@cluster0.csksvfp.mongodb.net/meetups?retryWrites=true&w=majority\"\r\n          );\r\n          const db = client.db();\r\n      \r\n          const meetupsCollection = db.collection(\"meetups\");\r\n          const result = await meetupsCollection.insertOne({\r\n            id:new Date(),\r\n            ...data\r\n          });\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n    client.close();\r\n\r\n    res.status(201).json({ message: \"Insert Success.\" });\r\n  }\r\n}\r\n\r\nexport default handler;\r\n"]},"metadata":{},"sourceType":"module"}